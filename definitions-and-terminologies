Java Microservices - CQRS & Event Sourcing with Kafka

- What is a Command -> a command is a combination of expressed intent.
	In other words, it describes something that you want to be done.
	It also contains the information required to undertake action based on that content.
	Commands are named with a verb in the imperative mood. For instance, 
		* OpenAccountsCommand
		* DepositFundscommand


- Events - events are objects that describe somthing that has occurred in the application.
		   A typical source of events is the aggregate. When something important has occurred
		   within the aggregate, it will rase an event.			



- Mediator Pattern -> a behavioral design pattern that promotes loose coupling by preventing
	objects from referring to each other explicitly.
	Simplify communication between objets by introducing a single object known as
	the mediator that manages the distribuition of messages among other objects.	 


- The Aggregate -> is an entity or group of entities that is always kept in a consistence state.
			The aggregate root is the entity within the aggregate that is responsible for maintaining this consistence state. This makes the aggregate the primary building
			block in any CQRS based application.


- The EventSourcingHandler provides an interface abstraction to which the command handler
  can obtain the latest state of the aggregate. And through which it can persist the uncommited 
  changes on the aggregate as events to the event store. Basically, it seats between the command
  handler and the event store business logic. 	